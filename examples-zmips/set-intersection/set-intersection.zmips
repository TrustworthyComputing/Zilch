move $t4, 5    # num of set entries

# public_tape is initialized in mem[0] - mem[len(private_tape)]
__init_private__:
    secread $t2
    sw $t2, 50($t0)
    add $t0, $t0, 1
bgt $t4, $t0, __init_private__

move $t0, 0                 # i = 0
move $t1, 0                 # j = 0
__loop__:                    #  while (i < m && j < n) {
ble $t4, $t0, __endloop__
ble $t4, $t1, __endloop__
    lw $t2, $t0($zero)
    lw $t3, 50($t1)
    bge $t2, $t3 __elif__   # if (arr1[i] < arr2[j])
        add $t0, $t0, 1     #   i++
        j __fi__
    __elif__:
    bge $t3, $t2 __else__   # else if (arr2[j] < arr1[i])
        add $t1, $t1, 1     #   j++
        j __fi__
    __else__:                # else if (arr2[j] == arr1[i])
        print $t3           #   printf(" %d ", arr2[j]);
        add $t0, $t0, 1     #   i++
        add $t1, $t1, 1     #   j++
    __fi__:
    j __loop__
__endloop__:

answer $t0
